
# Imports ----

import("BiocGenerics")
import("S4Vectors")
import("IRanges")
import("GenomicRanges")
import("SummarizedExperiment")
import("methods")

importFrom(
    "BiocParallel",
    "SerialParam", "MulticoreParam", "SnowParam", "registered")
importMethodsFrom(
    "BiocParallel",
    "bpmapply", "bplapply")
import("Biostrings")

importFrom(
    "ensembldb",
    "GenenameFilter")
importMethodsFrom(
    "ensembldb",
    "genes", "seqlevels")

importMethodsFrom(
    "GenomeInfoDb",
    "seqnames", "seqinfo")

importFrom(
    "Rsamtools",
    "TabixFile")
importMethodsFrom(
    "Rsamtools",
    "path")

importFrom(
    "stats",
    "as.formula"
)

# When Source and Version will be possible to add to VCF INFO fields
#importFrom(
#    "utils",
#    "packageVersion"
#)
importFrom(
    "utils",
    "read.table")

importClassesFrom(
    "VariantAnnotation",
    "VCF", "VCFHeader")
importMethodsFrom(
    "VariantAnnotation",
    "scanVcfHeader", "ScanVcfParam",
    "readVcf", "geno", "samples",
    "expand",
    "info", "header",
    "info<-", "header<-", "mcols<-"
)
importFrom(
    "VariantAnnotation",
    "vcfSamples<-", "vcfWhich<-", "vcfFixed<-", "vcfInfo<-", "vcfGeno<-"
)

importFrom("ensemblVEP", "parseCSQToGRanges")

importFrom(
    "ggplot2",
    "ggplot", "aes_string", "facet_wrap",
    "geom_bar", "geom_density",
    "ylab",
    "theme", "element_text", "rel")

#import(ggbio)

importFrom(
    "reshape2",
    "melt", "dcast")

#exportPattern("^[[:alpha:]]+")
# csqParseFunctions.R ----
# export(tryParseCsq)

# ensembldbFunctions.R ----

export("getEdb", "EnsDbFilter")

# runShinyApp.R ----

export("tSVE")

# Regular functions ----

export("chr2file")

# Deprecated ----

#export("altFreq")

# S4 ----

exportMethods(
    "preprocessVariants",
    "countGenos", "addCountGenos",

    "addFrequencies", "addOverallFrequencies", "addPhenoLevelFrequencies",

    "tabulateCsqByPhenotype", "tabulateCsqInPhenoLevel",
    "densityCsqByPhenotype", "densityCsqInPhenoLevel",
    "csqInPhenoLevel", "variantsInSamples",

    "genos", "genos<-",
    "ranges", "ranges<-",
    "aaf", "aaf<-",
    "maf", "maf<-",
    "hRef", "hRef<-",
    "het", "het<-",
    "hAlt", "hAlt<-",
    "carrier", "carrier<-",
    "vep", "vep<-",
    "bp","bp<-",

    "name", "name<-",
    "condition", "condition<-",
    "value","value<-",

    "initialize"
)

#exportClassPattern("^.*$")
exportClasses(
    "tSVEParam",
    "VcfInfoFilter", "VcfFixedFilter"
)

# Constructors ----

exportMethods(
    "tSVEParam",
    "VcfInfoFilter", "VcfFixedFilter", "VcfVepFilter"
)
